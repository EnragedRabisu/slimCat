<v:DisposableView x:Class="slimCat.Views.HomeChannelView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  mc:Ignorable="d"
                  xmlns:vm="clr-namespace:slimCat.ViewModels"
                  xmlns:v="clr-namespace:slimCat.Views"
                  xmlns:models="clr-namespace:slimCat.Models"
                  xmlns:utilities="clr-namespace:slimCat.Utilities"

                  d:DataContext="{d:DesignInstance vm:HomeChannelViewModel}">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type models:ThemeModel}">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}">
                        <Setter Property="Command"
                                Value="{Binding Path=DataContext.NavigateTo, RelativeSource={RelativeSource AncestorType={x:Type v:DisposableView}}}" />
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Foreground="{StaticResource ForegroundBrush}"
                           Grid.Column="0">
                    <Hyperlink CommandParameter="{Binding Path=Url}">
                        <Run Text="{Binding Path=Name}" />
                    </Hyperlink>
                </TextBlock>

                <TextBlock Text="by" Margin="5,0,0,0" Foreground="{StaticResource ForegroundBrush}" Grid.Column="1" />
                <ContentControl Content="{Binding Author}" Margin="5,0,0,0" Grid.Column="2" />

                <WrapPanel Grid.Column="3">
                    <WrapPanel.Resources>
                        <Style TargetType="Rectangle">
                            <Setter Property="Width" Value="20" />
                            <Setter Property="Height" Value="20" />
                            <Setter Property="Margin" Value="2" />
                            <Setter Property="VerticalAlignment" Value="Bottom" />
                        </Style>
                    </WrapPanel.Resources>
                    <Rectangle>
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding HighlightColor}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle>
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding ContrastColor}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle>
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding BackgroundColor}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle>
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding DepressedColor}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle>
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding BrightBackgroundColor}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle>
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding ForegroundColor}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </WrapPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:CharacterModel}">
            <ContentControl Margin="0"
                            Content="{Binding}"
                            HorizontalAlignment="Left"
                            TextBlock.TextAlignment="Left">
                <ContentControl.ContentTemplate>
                    <DataTemplate DataType="models:CharacterModel">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <Rectangle Height="16" Width="16"
                                       Fill="{Binding Converter={StaticResource GenderColorConverter}, Mode=OneWay}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush
                                        ImageSource="{Binding Path=Gender, Mode=OneTime, Converter={StaticResource GenderImageConverter}}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>

                            <TextBlock TextWrapping="Wrap"
                                       Grid.Column="1">
                                <Hyperlink CommandParameter="{Binding Path=Name, Mode=OneTime}"
                                           Command="{Binding Path=DataContext.NavigateTo, RelativeSource={RelativeSource AncestorType={x:Type v:DisposableView}}}"
                                           Style="{StaticResource UsernameStyle}"
                                           Foreground="{Binding Converter={StaticResource NameplateColorConverter}, Mode=OneWay}"
                                           MouseRightButtonUp="OnMouseRightButtonUp">
                                    <Run Text="{Binding Path=Name, Mode=OneTime}" />
                                </Hyperlink>
                            </TextBlock>

                        </Grid>
                    </DataTemplate>
                </ContentControl.ContentTemplate>
            </ContentControl>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:GeneralChannelModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Rectangle Height="15" Width="15" Fill="{StaticResource HighlightBrush}">
                    <Rectangle.OpacityMask>
                        <ImageBrush
                            ImageSource="{Binding Path=Type, Mode=OneTime, Converter={StaticResource ChannelTypeToImageConverter}}" />
                    </Rectangle.OpacityMask>
                </Rectangle>

                <TextBlock TextWrapping="Wrap"
                           Grid.Column="1"
                           Margin="2,0,0,0"
                           TextAlignment="Left"
                           MaxWidth="165">
                    <Hyperlink CommandParameter="{Binding Path=Id, Mode=OneTime}"
                               Style="{StaticResource ChannelStyle}">
                        <Run Text="{Binding Path=Title, Mode=OneTime}" />
                        <Run Text="{Binding Path=DisplayNumber, Mode=OneWay}" />
                    </Hyperlink>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Cursor" Value="Help" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,15,0,0" />
        </Style>
    </UserControl.Resources>

    <Grid TextBlock.FontSize="16">
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="auto"
                               x:Name="EntryBoxRowDefinition"
                               MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=v:DisposableView}, Converter={StaticResource RemoveSomeConverter}, ConverterParameter=60}" />
            </Grid.RowDefinitions>

            <Border BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="0,0,0,1">
                <Expander Header="{Binding Path=Model.Id, Mode=OneWay}"
                          Margin="0"
                          Padding="0">
                    <TextBlock Foreground="{StaticResource ForegroundBrush}"
                               TextWrapping="Wrap">

                        <Run Text="{Binding Path=ClientIdString, Mode=OneWay}" />
                        <LineBreak />

                        <Run Text="Users: " />
                        <Run Text="{Binding Path=OnlineCount, Mode=OneWay}" />
                        <Run Text="{Binding Path=OnlineCountChange, Mode=OneWay}" />
                        <LineBreak />

                        <Run Text="Server uptime: " />
                        <Run Text="{Binding Path=RoughServerUpTime, Mode=OneWay}"
                             Foreground="{StaticResource HighlightBrush}" />
                        <LineBreak />

                        <Run Text="Client uptime: " />
                        <Run Text="{Binding Path=RoughClientUpTime, Mode=OneWay}"
                             Foreground="{StaticResource HighlightBrush}" />
                        <LineBreak />

                        <Run Text="Last server response: " />
                        <Run Text="{Binding Path=LastMessageReceived, Mode=OneWay}"
                             Foreground="{StaticResource HighlightBrush}" />
                    </TextBlock>
                </Expander>
            </Border>

            <ScrollViewer Grid.Row="1"
                          CanContentScroll="False"
                          HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Stretch"
                          Visibility="{Binding Path=ChatModel.IsAuthenticated, Converter={StaticResource BoolConverter}}">
                <StackPanel HorizontalAlignment="Stretch">
                    <WrapPanel TextBlock.Foreground="{StaticResource ForegroundBrush}">
                        <WrapPanel.Resources>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource ActivatingToggleButton}" />
                        </WrapPanel.Resources>

                        <RadioButton Margin="5" Content="About"
                                     IsChecked="{Binding SelectedTab, Converter={StaticResource EqualsConverter}, ConverterParameter=About}" />
                        <RadioButton Content="Themes" Margin="5"
                                     IsChecked="{Binding SelectedTab, Converter={StaticResource EqualsConverter}, ConverterParameter=Themes}" />
                        <RadioButton Content="Settings" Margin="5"
                                     IsChecked="{Binding SelectedTab, Converter={StaticResource EqualsConverter}, ConverterParameter=Settings}" />
                        <RadioButton Content="Recent Tabs" Margin="5"
                                     IsChecked="{Binding SelectedTab, Converter={StaticResource EqualsConverter}, ConverterParameter=Tabs}" />
                        <RadioButton Content="Help" Margin="5"
                                     IsChecked="{Binding SelectedTab, Converter={StaticResource EqualsConverter}, ConverterParameter=Help}" />
                    </WrapPanel>
                    <Line Stretch="Fill" Stroke="{StaticResource HighlightBrush}" X2="1" Margin="0,5" />

                    <StackPanel TextBlock.Foreground="{StaticResource ForegroundBrush}"
                                Visibility="{Binding SelectedTab, Converter={StaticResource EqualsVisibilityConverterChain}, ConverterParameter=About}">
                        <TextBlock>
                            <Run Foreground="{StaticResource ContrastBrush}"
                                 FontSize="20"
                                 Text="{x:Static utilities:Constants.FriendlyName}" />
                        </TextBlock>
                        <TextBlock
                            Visibility="{Binding HasNewUpdate, Converter={StaticResource OppositeBoolConverter}}">
                            <Hyperlink CommandParameter="{Binding Path=ChangeLog, Mode=OneWay}">Changelog</Hyperlink>
                        </TextBlock>

                        <WrapPanel>
                            <TextBlock Text="by" />
                            <ContentControl Content="{Binding Path=slimCat}" Margin="5,0,0,0" />
                        </WrapPanel>

                        <StackPanel Visibility="{Binding HasNewUpdate, Converter={StaticResource BoolConverter}}">
                            <TextBlock Margin="0,5,0,0">
                                <Run Foreground="{StaticResource ContrastBrush}"
                                     FontSize="20"
                                     Text="{Binding Path=UpdateName, Mode=OneWay}" />
                            </TextBlock>
                            <TextBlock>
                                <Hyperlink CommandParameter="{Binding Path=ChangeLog, Mode=OneWay}">Changelog</Hyperlink>
                            </TextBlock>
                            <TextBlock>
                                <Run Text="released" />
                                <Run Text="{Binding Path=UpdateBuildTime, Mode=OneWay}" />
                                <LineBreak />

                                <Hyperlink CommandParameter="{Binding Path=UpdateLink, Mode=OneWay}">Update Now!</Hyperlink>
                            </TextBlock>
                        </StackPanel>

                        <StackPanel>

                            <Line Stretch="Fill" Stroke="{StaticResource HighlightBrush}" X2="1" Margin="0,10" />

                            <TextBlock TextWrapping="Wrap">
                                <Run>
                                    I am not working on slimCat. These patches are coming from the amazing slimCat community. slimCat will remain
                                    connecting to F-chat and even bug free so long as people continue to help make it the best it can be.
                                </Run>
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel HorizontalAlignment="Stretch"
                                Visibility="{Binding SelectedTab, Converter={StaticResource EqualsVisibilityConverterChain}, ConverterParameter=Themes}">
                        <StackPanel Visibility="{Binding HasCurrentTheme, Converter={StaticResource BoolConverter}}"
                                    Margin="0,0,0,10">
                            <TextBlock Text="Current Theme:" Foreground="{StaticResource ForegroundBrush}" />
                            <ContentControl Content="{Binding CurrentTheme}" Margin="0" />
                        </StackPanel>

                        <TextBlock Text="Available Themes:" Foreground="{StaticResource ForegroundBrush}" />
                        <ItemsControl ItemsSource="{Binding Themes}"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="Stretch"
                                      Style="{StaticResource NoScrollListBox}" />

                        <WrapPanel Margin="0,10,0,0">

                            <TextBlock Foreground="{StaticResource ForegroundBrush}" TextWrapping="Wrap">
                                If you want your theme listed here, contact
                            </TextBlock>

                            <ContentControl Content="{Binding Path=slimCat}" Margin="5,0,0,0" />
                        </WrapPanel>
                    </StackPanel>

                    <StackPanel
                        Visibility="{Binding SelectedTab, Converter={StaticResource EqualsVisibilityConverterChain}, ConverterParameter=Settings}">
                        <v:HomeSettingsView DataContext="{Binding SettingsVm}" />
                    </StackPanel>

                    <Grid
                        Visibility="{Binding SelectedTab, Converter={StaticResource EqualsVisibilityConverterChain}, ConverterParameter=Tabs}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="200" />
                        </Grid.ColumnDefinitions>

                        <ItemsControl ItemsSource="{Binding RecentCharacters}"
                                      HorizontalAlignment="Left"
                                      VerticalContentAlignment="Top"
                                      HorizontalContentAlignment="Left"
                                      Style="{StaticResource AvatarBoxStyle}" />

                        <ItemsControl ItemsSource="{Binding RecentChannels}"
                                      ItemTemplate="{StaticResource ChannelTemplate}"
                                      Style="{StaticResource NoScrollListBox}"
                                      HorizontalContentAlignment="Right"
                                      HorizontalAlignment="Right"
                                      Grid.Column="1" />
                    </Grid>

                    <WrapPanel
                        Visibility="{Binding SelectedTab, Converter={StaticResource EqualsVisibilityConverterChain}, ConverterParameter=Help}"
                        TextBlock.Foreground="{StaticResource ForegroundBrush}">
                        <v:HomeHelpView DataContext="{Binding HelpVm}" />
                    </WrapPanel>

                    <Line Stretch="Fill" Stroke="{StaticResource HighlightBrush}" X2="1" Margin="0,10" />
                </StackPanel>
            </ScrollViewer>

            <Border HorizontalAlignment="Center"
                    Grid.Row="1"
                    VerticalAlignment="Center"
                    Visibility="{Binding Path=ChatModel.IsAuthenticated, Converter={StaticResource OppositeBoolConverter}}">
                <StackPanel>
                    <TextBlock Foreground="{StaticResource ForegroundBrush}"
                               FontSize="24"
                               TextWrapping="Wrap">
                        <Run Text="{Binding ConnectFlavorText, Mode=OneWay}" />
                    </TextBlock>

                    <Button MaxWidth="200"
                            Margin="0,20,0,0"
                            FontSize="20"
                            Command="{Binding Path=LogoutCommand}">
                        Cancel Connecting
                    </Button>
                </StackPanel>
            </Border>

            <v:RightClickMenu Grid.Row="1" />

            <GridSplitter Grid.Row="2" MouseDoubleClick="OnEntryBoxResizeRequested" />

            <Grid Grid.Row="2"
                  Height="auto"
                  Margin="0,4,0,0"
                  MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=v:DisposableView}, Converter={StaticResource RemoveSomeConverter}, ConverterParameter=65}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="0">
                    <v:MarkupButtonView Margin="4"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding Path=ShowPreview, Mode=TwoWay}" />
                </StackPanel>

                <v:ChannelTextBoxEntryView Margin="0,0,0,10" Grid.Row="1" />
            </Grid>
        </Grid>
    </Grid>
</v:DisposableView>